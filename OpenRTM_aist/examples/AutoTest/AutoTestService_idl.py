# Python stubs generated by omniidl from /home/openrtm/svn/OpenRTM-aist-Python/OpenRTM_aist/examples/AutoTest/AutoTestService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "AutoTest"
#
__name__ = "AutoTest"
_0_AutoTest = omniORB.openModule("AutoTest", r"/home/openrtm/svn/OpenRTM-aist-Python/OpenRTM_aist/examples/AutoTest/AutoTestService.idl")
_0_AutoTest__POA = omniORB.openModule("AutoTest__POA", r"/home/openrtm/svn/OpenRTM-aist-Python/OpenRTM_aist/examples/AutoTest/AutoTestService.idl")


# typedef ... EchoList
class EchoList:
    _NP_RepositoryId = "IDL:AutoTest/EchoList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_AutoTest.EchoList = EchoList
_0_AutoTest._d_EchoList  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_AutoTest._ad_EchoList = (omniORB.tcInternal.tv_alias, EchoList._NP_RepositoryId, "EchoList", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_AutoTest._tc_EchoList = omniORB.tcInternal.createTypeCode(_0_AutoTest._ad_EchoList)
omniORB.registerType(EchoList._NP_RepositoryId, _0_AutoTest._ad_EchoList, _0_AutoTest._tc_EchoList)
del EchoList

# typedef ... ValueList
class ValueList:
    _NP_RepositoryId = "IDL:AutoTest/ValueList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_AutoTest.ValueList = ValueList
_0_AutoTest._d_ValueList  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0)
_0_AutoTest._ad_ValueList = (omniORB.tcInternal.tv_alias, ValueList._NP_RepositoryId, "ValueList", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_float, 0))
_0_AutoTest._tc_ValueList = omniORB.tcInternal.createTypeCode(_0_AutoTest._ad_ValueList)
omniORB.registerType(ValueList._NP_RepositoryId, _0_AutoTest._ad_ValueList, _0_AutoTest._tc_ValueList)
del ValueList

# interface MyService
_0_AutoTest._d_MyService = (omniORB.tcInternal.tv_objref, "IDL:AutoTest/MyService:1.0", "MyService")
omniORB.typeMapping["IDL:AutoTest/MyService:1.0"] = _0_AutoTest._d_MyService
_0_AutoTest.MyService = omniORB.newEmptyClass()
class MyService :
    _NP_RepositoryId = _0_AutoTest._d_MyService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_AutoTest.MyService = MyService
_0_AutoTest._tc_MyService = omniORB.tcInternal.createTypeCode(_0_AutoTest._d_MyService)
omniORB.registerType(MyService._NP_RepositoryId, _0_AutoTest._d_MyService, _0_AutoTest._tc_MyService)

# MyService operations and attributes
MyService._d_echo = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)
MyService._d_get_echo_history = ((), (omniORB.typeMapping["IDL:AutoTest/EchoList:1.0"], ), None)
MyService._d_set_value = ((omniORB.tcInternal.tv_float, ), (), None)
MyService._d_get_value = ((), (omniORB.tcInternal.tv_float, ), None)
MyService._d_get_value_history = ((), (omniORB.typeMapping["IDL:AutoTest/ValueList:1.0"], ), None)

# MyService object reference
class _objref_MyService (CORBA.Object):
    _NP_RepositoryId = MyService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def echo(self, *args):
        return _omnipy.invoke(self, "echo", _0_AutoTest.MyService._d_echo, args)

    def get_echo_history(self, *args):
        return _omnipy.invoke(self, "get_echo_history", _0_AutoTest.MyService._d_get_echo_history, args)

    def set_value(self, *args):
        return _omnipy.invoke(self, "set_value", _0_AutoTest.MyService._d_set_value, args)

    def get_value(self, *args):
        return _omnipy.invoke(self, "get_value", _0_AutoTest.MyService._d_get_value, args)

    def get_value_history(self, *args):
        return _omnipy.invoke(self, "get_value_history", _0_AutoTest.MyService._d_get_value_history, args)

    __methods__ = ["echo", "get_echo_history", "set_value", "get_value", "get_value_history"] + CORBA.Object.__methods__

omniORB.registerObjref(MyService._NP_RepositoryId, _objref_MyService)
_0_AutoTest._objref_MyService = _objref_MyService
del MyService, _objref_MyService

# MyService skeleton
__name__ = "AutoTest__POA"
class MyService (PortableServer.Servant):
    _NP_RepositoryId = _0_AutoTest.MyService._NP_RepositoryId


    _omni_op_d = {"echo": _0_AutoTest.MyService._d_echo, "get_echo_history": _0_AutoTest.MyService._d_get_echo_history, "set_value": _0_AutoTest.MyService._d_set_value, "get_value": _0_AutoTest.MyService._d_get_value, "get_value_history": _0_AutoTest.MyService._d_get_value_history}

MyService._omni_skeleton = MyService
_0_AutoTest__POA.MyService = MyService
omniORB.registerSkeleton(MyService._NP_RepositoryId, MyService)
del MyService
__name__ = "AutoTest"

#
# End of module "AutoTest"
#
__name__ = "AutoTestService_idl"

_exported_modules = ( "AutoTest", )

# The end.
